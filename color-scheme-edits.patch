diff --git a/.eslintrc.json b/.eslintrc.json
index 321bcd0..7e11706 100644
--- a/.eslintrc.json
+++ b/.eslintrc.json
@@ -1,6 +1,7 @@
 {
     "extends": "next/core-web-vitals",
     "rules": {
-        "@next/next/no-img-element": "off"
+        "@next/next/no-img-element": "off",
+        "react/no-unescaped-entities": "off"
     }
 }
diff --git a/app/layout.jsx b/app/layout.jsx
index ac5936f..0976af3 100644
--- a/app/layout.jsx
+++ b/app/layout.jsx
@@ -13,12 +13,12 @@ export const metadata = {
 export default function RootLayout({ children }) {
   return (
     <html lang="en" suppressHydrationWarning>
-      <body className="grid grid-rows-[auto_1fr_auto] h-screen antialiased text-white bg-blue-900">
+      <body className="grid grid-rows-[auto_1fr_auto] h-screen antialiased">
         <header className="grid-row-1">
           <Nav />
         </header>
         <main className="grid-row-2">
-          <div className="flex flex-col min-h-screen px-6 bg-noise sm:px-12">
+                     <div className="flex flex-col min-h-screen px-6 sm:px-12">
             <div className="flex flex-col w-full max-w-5xl mx-auto grow">
               {children}
             </div>
diff --git a/components/ThemeToggle.jsx b/components/ThemeToggle.jsx
index df4cbcd..eccce8b 100644
--- a/components/ThemeToggle.jsx
+++ b/components/ThemeToggle.jsx
@@ -5,7 +5,6 @@ export default function ThemeToggle() {
     const [mounted, setMounted] = useState(false);
 
     useEffect(() => {
-        // Check for saved theme preference or system preference
         const savedTheme = localStorage.getItem('theme');
         const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
         const initialTheme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
@@ -14,7 +13,6 @@ export default function ThemeToggle() {
         applyTheme(initialTheme);
         setMounted(true);
 
-        // Listen for system theme changes
         const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
         const handleChange = (e) => {
             if (!localStorage.getItem('theme')) {
@@ -29,26 +27,7 @@ export default function ThemeToggle() {
     }, []);
 
     const applyTheme = (theme) => {
-        // Update data-theme attribute
         document.documentElement.setAttribute('data-theme', theme);
-
-        // Update CSS variables based on theme
-        const root = document.documentElement;
-        if (theme === 'dark') {
-            root.style.setProperty('--color-primary', '#f7b500');
-            root.style.setProperty('--color-primary-dark', '#c49000');
-            root.style.setProperty('--color-secondary', '#fff3d6');
-            root.style.setProperty('--color-background', '#fffbe9');
-            root.style.setProperty('--color-text', '#2d1600');
-            root.style.setProperty('--color-accent', '#e85d04');
-        } else {
-            root.style.setProperty('--color-primary', '#00eaff');
-            root.style.setProperty('--color-primary-dark', '#00b8cc');
-            root.style.setProperty('--color-secondary', '#ff5af7');
-            root.style.setProperty('--color-background', '#181c27');
-            root.style.setProperty('--color-text', '#ffffff');
-            root.style.setProperty('--color-accent', '#fbbf24');
-        }
     };
 
     const toggleTheme = () => {
@@ -58,7 +37,6 @@ export default function ThemeToggle() {
         localStorage.setItem('theme', newTheme);
     };
 
-    // Prevent hydration mismatch
     if (!mounted) {
         return null;
     }
diff --git a/components/styles/main.css b/components/styles/main.css
index 390d08f..f06b3b3 100644
--- a/components/styles/main.css
+++ b/components/styles/main.css
@@ -1,74 +1,26 @@
 :root {
-    /* Base Color */
-    --base-color-rgb: 0, 0, 0;
-    --base-color-inverse-rgb: 255, 255, 255;
-    --base-color: rgb(var(--base-color-rgb));
-    --base-color-inverse: rgb(var(--base-color-inverse-rgb));
-
-    /* Theme Colors - Dark Theme (Default) */
-    --color-primary: #ff00ff;
-    --color-secondary: #00ff00;
-    --color-background: rgba(var(--base-color-rgb), 0.8);
-    --color-background-light: rgba(var(--base-color-inverse-rgb), 0.1);
-    --color-text: var(--base-color-inverse);
-    --color-text-dark: var(--base-color);
-    --color-disabled: #666;
-
-    /* Typography */
-    --font-family: 'Courier New', monospace;
-    --font-size-small: 0.75rem;
-    --font-size-normal: 1rem;
-    --font-size-large: 1.25rem;
-    --font-size-xlarge: 2rem;
-    --font-size-xxlarge: 2.5rem;
-
-    /* Spacing */
-    --spacing-xs: 0.25rem;
-    --spacing-sm: 0.5rem;
-    --spacing-md: 1rem;
-    --spacing-lg: 1.5rem;
-    --spacing-xl: 2rem;
-
-    /* Border */
-    --border-radius-sm: 0.5rem;
-    --border-radius-md: 1rem;
-    --border-width: 2px;
-
-    /* Animation */
-    --transition-fast: 0.3s;
-    --transition-normal: 0.5s;
-    --transition-slow: 2s;
-}
-
-/* Light Theme */
-[data-theme="light"] {
-    --base-color-rgb: 255, 255, 255;
-    --base-color-inverse-rgb: 0, 0, 0;
-    --color-background: rgba(var(--base-color-rgb), 0.8);
-    --color-background-light: rgba(var(--base-color-inverse-rgb), 0.1);
-    --color-text: var(--base-color-inverse);
-    --color-text-dark: var(--base-color);
+    /* Deprecated: variables now live in styles/globals.css */
 }
 
 /* Base Styles */
 .ramenBuilder {
     background: var(--color-background);
     min-height: 100vh;
-    padding: var(--spacing-md);
+    padding: var(--spacing-md, 1rem);
 }
 
 .container {
     background: var(--color-background-light);
-    border-radius: var(--border-radius-md);
-    padding: var(--spacing-md);
-    margin: var(--spacing-md) 0;
+    border-radius: var(--border-radius-md, 1rem);
+    padding: var(--spacing-md, 1rem);
+    margin: var(--spacing-md, 1rem) 0;
 }
 
 .stepContent {
     background: var(--color-background-light);
-    border-radius: var(--border-radius-md);
-    padding: var(--spacing-md);
-    margin: var(--spacing-md) 0;
+    border-radius: var(--border-radius-md, 1rem);
+    padding: var(--spacing-md, 1rem);
+    margin: var(--spacing-md, 1rem) 0;
 }
 
 /* Step Controls */
@@ -77,39 +29,38 @@
     justify-content: space-between;
     align-items: center;
     background: var(--color-background-light);
-    border-radius: var(--border-radius-md);
+    border-radius: var(--border-radius-md, 1rem);
     backdrop-filter: blur(10px);
-    padding: var(--spacing-md);
-    margin-top: var(--spacing-md);
+    padding: var(--spacing-md, 1rem);
+    margin-top: var(--spacing-md, 1rem);
 }
 
 .controls .button {
-    padding: var(--spacing-sm) var(--spacing-lg);
-    border: var(--border-width) solid var(--color-primary);
+    padding: var(--spacing-sm, 0.5rem) var(--spacing-lg, 1.5rem);
+    border: 2px solid var(--color-primary);
     background: var(--color-background);
     color: var(--color-text);
-    font-family: var(--font-family);
     font-weight: bold;
     text-transform: uppercase;
     letter-spacing: 1px;
     cursor: pointer;
-    transition: all var(--transition-fast) ease;
+    transition: all 0.3s ease;
     position: relative;
     overflow: hidden;
-    border-radius: var(--border-radius-sm);
+    border-radius: var(--border-radius-sm, 0.5rem);
 }
 
 .controls .button:hover:not(:disabled) {
     background: var(--color-primary);
     color: var(--color-text-dark);
     transform: translateY(-2px) scale(1.05);
-    box-shadow: 0 0 15px rgba(255, 0, 255, 0.5);
+    box-shadow: 0 0 15px rgba(255, 0, 255, 0.2);
 }
 
 .controls .button:disabled {
     opacity: 0.5;
     cursor: not-allowed;
-    border-color: var(--color-disabled);
+    border-color: var(--color-disabled, #666);
 }
 
 .controls .button::before {
@@ -119,11 +70,8 @@
     left: -100%;
     width: 100%;
     height: 100%;
-    background: linear-gradient(90deg,
-            transparent,
-            rgba(var(--base-color-inverse-rgb), 0.2),
-            transparent);
-    transition: var(--transition-normal);
+    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.15), transparent);
+    transition: 0.5s;
 }
 
 .controls .button:hover::before {
@@ -133,38 +81,37 @@
 .controls .nextButton {
     background: var(--color-primary);
     color: var(--color-text-dark);
-    animation: pulse var(--transition-slow) infinite;
+    animation: pulse 2s infinite;
 }
 
 .controls .finishButton {
     background: var(--color-secondary);
     color: var(--color-text-dark);
     border-color: var(--color-secondary);
-    animation: pulse var(--transition-slow) infinite;
+    animation: pulse 2s infinite;
 }
 
 /* Step Navigation */
 .navigation {
     display: flex;
     justify-content: center;
-    gap: var(--spacing-md);
-    margin-bottom: var(--spacing-xl);
+    gap: var(--spacing-md, 1rem);
+    margin-bottom: var(--spacing-xl, 2rem);
     background: var(--color-background-light);
-    border-radius: var(--border-radius-md);
-    padding: var(--spacing-md);
+    border-radius: var(--border-radius-md, 1rem);
+    padding: var(--spacing-md, 1rem);
 }
 
 .navigation .step {
     display: flex;
     flex-direction: column;
     align-items: center;
-    gap: var(--spacing-sm);
+    gap: var(--spacing-sm, 0.5rem);
     color: var(--color-text);
-    font-family: var(--font-family);
     position: relative;
-    padding: var(--spacing-sm);
+    padding: var(--spacing-sm, 0.5rem);
     min-width: 100px;
-    transition: all var(--transition-fast) ease;
+    transition: all 0.3s ease;
     cursor: pointer;
 }
 
@@ -178,10 +125,10 @@
     bottom: -0.5rem;
     left: 0;
     width: 100%;
-    height: var(--border-width);
+    height: 2px;
     background: var(--color-primary);
     transform: scaleX(0);
-    transition: transform var(--transition-fast) ease;
+    transition: transform 0.3s ease;
 }
 
 .navigation .step.active::after {
@@ -203,11 +150,11 @@
     display: flex;
     align-items: center;
     justify-content: center;
-    border: var(--border-width) solid var(--color-primary);
+    border: 2px solid var(--color-primary);
     border-radius: 50%;
     font-weight: bold;
     background: var(--color-background);
-    transition: all var(--transition-fast) ease;
+    transition: all 0.3s ease;
     position: relative;
     overflow: hidden;
     font-size: 1.5rem;
@@ -220,11 +167,8 @@
     left: -100%;
     width: 100%;
     height: 100%;
-    background: linear-gradient(90deg,
-            transparent,
-            rgba(var(--base-color-inverse-rgb), 0.2),
-            transparent);
-    transition: var(--transition-normal);
+    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
+    transition: 0.5s;
 }
 
 .navigation .step:hover .stepNumber::before {
@@ -235,18 +179,18 @@
     background: var(--color-primary);
     color: var(--color-text-dark);
     transform: scale(1.1);
-    animation: pulse var(--transition-slow) infinite;
+    animation: pulse 2s infinite;
 }
 
 .navigation .step.completed .stepNumber {
     background: var(--color-secondary);
     color: var(--color-text-dark);
     border-color: var(--color-secondary);
-    animation: pulse var(--transition-slow) infinite;
+    animation: pulse 2s infinite;
 }
 
 .navigation .stepLabel {
-    font-size: var(--font-size-small);
+    font-size: 0.75rem;
     text-transform: uppercase;
     letter-spacing: 1px;
     text-align: center;
@@ -257,16 +201,16 @@
     display: flex;
     justify-content: center;
     align-items: center;
-    gap: var(--spacing-md);
-    padding: var(--spacing-lg);
+    gap: var(--spacing-md, 1rem);
+    padding: var(--spacing-lg, 1.5rem);
     background: var(--color-background-light);
-    border: var(--border-width) solid var(--color-primary);
-    border-radius: var(--border-radius-md);
-    margin: var(--spacing-md) 0;
+    border: 2px solid var(--color-primary);
+    border-radius: var(--border-radius-md, 1rem);
+    margin: var(--spacing-md, 1rem) 0;
     position: relative;
     overflow: hidden;
     backdrop-filter: blur(10px);
-    animation: float var(--transition-slow) ease-in-out infinite;
+    animation: float 2s ease-in-out infinite;
 }
 
 .priceContainer::before {
@@ -276,124 +220,72 @@
     left: 0;
     width: 100%;
     height: 100%;
-    background: linear-gradient(45deg,
-            transparent,
-            rgba(255, 0, 255, 0.1),
-            transparent);
-    animation: shimmer var(--transition-slow) infinite;
+    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.08), transparent);
+    animation: shimmer 2s infinite;
 }
 
 .priceLabel {
     color: var(--color-text);
-    font-family: var(--font-family);
-    font-size: var(--font-size-large);
+    font-size: 1.25rem;
     text-transform: uppercase;
     letter-spacing: 1px;
-    text-shadow: 0 0 5px rgba(var(--base-color-inverse-rgb), 0.5);
+    text-shadow: 0 0 5px rgba(255,255,255,0.2);
 }
 
 .priceValue {
     color: var(--color-secondary);
-    font-family: var(--font-family);
-    font-size: var(--font-size-xxlarge);
+    font-size: 2.5rem;
     font-weight: bold;
-    text-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
-    animation: glow var(--transition-slow) ease-in-out infinite alternate;
+    text-shadow: 0 0 10px rgba(0, 255, 0, 0.4);
+    animation: glow 2s ease-in-out infinite alternate;
 }
 
 .currency {
     color: var(--color-primary);
-    margin-right: var(--spacing-xs);
-    text-shadow: 0 0 5px rgba(255, 0, 255, 0.5);
+    margin-right: 0.25rem;
+    text-shadow: 0 0 5px rgba(255, 0, 255, 0.4);
 }
 
 /* Animations */
 @keyframes pulse {
-    0% {
-        box-shadow: 0 0 0 0 rgba(255, 0, 255, 0.4);
-    }
-
-    70% {
-        box-shadow: 0 0 0 10px rgba(255, 0, 255, 0);
-    }
-
-    100% {
-        box-shadow: 0 0 0 0 rgba(255, 0, 255, 0);
-    }
+    0% { box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.2); }
+    70% { box-shadow: 0 0 0 10px rgba(255, 255, 255, 0); }
+    100% { box-shadow: 0 0 0 0 rgba(255, 255, 255, 0); }
 }
 
 @keyframes float {
-    0% {
-        transform: translateY(0px);
-    }
-
-    50% {
-        transform: translateY(-5px);
-    }
-
-    100% {
-        transform: translateY(0px);
-    }
+    0% { transform: translateY(0px); }
+    50% { transform: translateY(-5px); }
+    100% { transform: translateY(0px); }
 }
 
 @keyframes shimmer {
-    0% {
-        transform: translateX(-100%);
-    }
-
-    100% {
-        transform: translateX(100%);
-    }
+    0% { transform: translateX(-100%); }
+    100% { transform: translateX(100%); }
 }
 
 @keyframes glow {
-    from {
-        text-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
-    }
-
-    to {
-        text-shadow: 0 0 20px rgba(0, 255, 0, 0.8),
-            0 0 30px rgba(0, 255, 0, 0.6);
-    }
+    from { text-shadow: 0 0 10px rgba(0, 255, 0, 0.4); }
+    to { text-shadow: 0 0 20px rgba(0, 255, 0, 0.7), 0 0 30px rgba(0, 255, 0, 0.5); }
 }
 
-/* Media Queries */
+/* Responsive */
 @media (max-width: 768px) {
-    .navigation {
-        flex-wrap: wrap;
-        gap: var(--spacing-sm);
-    }
-
-    .navigation .step {
-        min-width: 80px;
-    }
-
-    .navigation .stepLabel {
-        font-size: var(--font-size-small);
-    }
-
-    .priceContainer {
-        flex-direction: column;
-        gap: var(--spacing-sm);
-        padding: var(--spacing-md);
-    }
-
-    .priceLabel {
-        font-size: var(--font-size-normal);
-    }
-
-    .priceValue {
-        font-size: var(--font-size-xlarge);
-    }
+    .navigation { flex-wrap: wrap; gap: var(--spacing-sm, 0.5rem); }
+    .navigation .step { min-width: 80px; }
+    .navigation .stepLabel { font-size: 0.75rem; }
+    .priceContainer { flex-direction: column; gap: var(--spacing-sm, 0.5rem); padding: var(--spacing-md, 1rem); }
+    .priceLabel { font-size: 1rem; }
+    .priceValue { font-size: 2rem; }
 }
 
 /* Theme Toggle */
 .themeToggle {
     position: fixed;
-    top: var(--spacing-md);
-    right: var(--spacing-md);
+    top: 1rem;
+    right: 1rem;
     background: var(--color-background-light);
-    border: var(--border-width) solid var(--color-primary);
+    border: 2px solid var(--color-primary);
     border-radius: 50%;
     width: 40px;
     height: 40px;
@@ -402,7 +294,7 @@
     justify-content: center;
     cursor: pointer;
     font-size: 1.2rem;
-    transition: all var(--transition-fast);
+    transition: all 0.3s;
     z-index: 1000;
     color: var(--color-text);
 }
@@ -414,42 +306,23 @@
 }
 
 /* Step Selector */
-.stepSelector {
-    background: var(--color-background);
-    border-radius: var(--border-radius-md);
-    padding: var(--spacing-md);
-    margin: var(--spacing-md) 0;
-    box-shadow: 0 0 20px rgba(var(--base-color-inverse-rgb), 0.1);
-}
-
-.stepTitle {
-    color: var(--color-text);
-    font-family: var(--font-family);
-    font-size: var(--font-size-large);
-    margin-bottom: var(--spacing-md);
-    text-align: center;
-    text-transform: uppercase;
-    letter-spacing: 2px;
-    text-shadow: 0 0 10px rgba(var(--base-color-inverse-rgb), 0.3);
-}
-
 .optionsGrid {
     display: grid;
     grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
-    gap: var(--spacing-md);
+    gap: var(--spacing-md, 1rem);
 }
 
 .optionButton {
     background: var(--color-background-light);
-    border: var(--border-width) solid var(--color-primary);
-    border-radius: var(--border-radius-sm);
-    padding: var(--spacing-md);
+    border: 2px solid var(--color-primary);
+    border-radius: var(--border-radius-sm, 0.5rem);
+    padding: var(--spacing-md, 1rem);
     display: flex;
     flex-direction: column;
     align-items: center;
-    gap: var(--spacing-sm);
+    gap: var(--spacing-sm, 0.5rem);
     cursor: pointer;
-    transition: all var(--transition-fast);
+    transition: all 0.3s;
     color: var(--color-text);
     position: relative;
     overflow: hidden;
@@ -463,191 +336,40 @@
     left: -100%;
     width: 100%;
     height: 100%;
-    background: linear-gradient(90deg,
-            transparent,
-            rgba(var(--base-color-inverse-rgb), 0.1),
-            transparent);
-    transition: var(--transition-normal);
+    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
+    transition: 0.5s;
 }
 
-.optionButton:hover::before {
-    left: 100%;
-}
+.optionButton:hover::before { left: 100%; }
 
 .optionButton:hover {
     transform: translateY(-2px) scale(1.02);
-    box-shadow: 0 0 15px rgba(var(--base-color-inverse-rgb), 0.2);
+    box-shadow: 0 0 15px rgba(255, 255, 255, 0.15);
 }
 
 .optionButton.selected {
-    background: #00ff00;
-    color: #000;
-    border-color: #00ff00;
+    background: var(--color-secondary);
+    color: var(--color-text-dark);
+    border-color: var(--color-secondary);
     transform: scale(1.05);
-    box-shadow: 0 0 30px rgba(0, 255, 0, 0.4);
-    animation: selectedPulse 2s infinite;
+    box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
 }
 
 .optionButton.selected::after {
     content: '';
     position: absolute;
-    top: 0;
-    left: 0;
-    right: 0;
-    bottom: 0;
-    background: linear-gradient(45deg,
-            transparent,
-            rgba(0, 255, 0, 0.1),
-            transparent);
-    animation: selectedGlow 2s infinite;
-}
-
-@keyframes selectedPulse {
-    0% {
-        transform: scale(1.05);
-        box-shadow: 0 0 20px rgba(0, 255, 0, 0.4);
-    }
-
-    50% {
-        transform: scale(1.08);
-        box-shadow: 0 0 40px rgba(0, 255, 0, 0.6);
-    }
-
-    100% {
-        transform: scale(1.05);
-        box-shadow: 0 0 20px rgba(0, 255, 0, 0.4);
-    }
-}
-
-@keyframes selectedGlow {
-    0% {
-        opacity: 0.5;
-    }
-
-    50% {
-        opacity: 1;
-    }
-
-    100% {
-        opacity: 0.5;
-    }
-}
-
-.optionButton.selected .optionEmoji {
-    transform: scale(1.2);
-    filter: drop-shadow(0 0 10px rgba(0, 255, 0, 0.5));
-    animation: emojiPulse 2s infinite;
-}
-
-@keyframes emojiPulse {
-    0% {
-        transform: scale(1.2);
-    }
-
-    50% {
-        transform: scale(1.3);
-    }
-
-    100% {
-        transform: scale(1.2);
-    }
-}
-
-.optionButton.selected .optionName {
-    color: #000;
-    text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);
-    font-weight: bold;
-}
-
-.optionButton.selected .optionDescription {
-    opacity: 1;
-    color: #000;
-    font-weight: bold;
-}
-
-.optionButton.selected .optionPrice {
-    color: #000;
-    text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);
-    font-weight: bold;
-    animation: pricePulse 2s infinite;
-}
-
-@keyframes pricePulse {
-    0% {
-        transform: scale(1);
-    }
-
-    50% {
-        transform: scale(1.1);
-    }
-
-    100% {
-        transform: scale(1);
-    }
-}
-
-.optionHeader {
-    display: flex;
-    justify-content: space-between;
-    align-items: center;
-    width: 100%;
-}
-
-.optionEmoji {
-    font-size: 2.5rem;
-    filter: drop-shadow(0 0 5px rgba(var(--base-color-inverse-rgb), 0.3));
-    transition: transform var(--transition-fast);
-}
-
-.optionTags {
-    display: flex;
-    gap: var(--spacing-xs);
-}
-
-.tag {
-    font-size: 1.2rem;
-    padding: 2px 6px;
-    border-radius: var(--border-radius-sm);
-    background: rgba(var(--base-color-inverse-rgb), 0.1);
-}
-
-.optionName {
-    font-family: var(--font-family);
-    font-size: var(--font-size-normal);
-    font-weight: bold;
-    text-align: center;
-    text-transform: uppercase;
-    letter-spacing: 1px;
-    transition: all var(--transition-fast);
+    top: 0; left: 0; right: 0; bottom: 0;
+    background: linear-gradient(45deg, transparent, rgba(0, 0, 0, 0.06), transparent);
 }
 
-.optionDescription {
-    font-size: var(--font-size-small);
-    text-align: center;
-    color: var(--color-text);
-    opacity: 0.8;
-    line-height: 1.4;
-    transition: all var(--transition-fast);
-}
-
-.optionPrice {
-    font-family: var(--font-family);
-    font-size: var(--font-size-small);
-    color: var(--color-primary);
-    font-weight: bold;
-    transition: all var(--transition-fast);
-}
+.optionEmoji { font-size: 2.5rem; filter: drop-shadow(0 0 5px rgba(255,255,255,0.2)); transition: transform 0.3s; }
+.optionName { font-size: 1rem; font-weight: bold; text-align: center; letter-spacing: 1px; }
+.optionDescription { font-size: 0.85rem; text-align: center; color: var(--color-text); opacity: 0.8; line-height: 1.4; }
+.optionPrice { font-size: 0.85rem; color: var(--color-primary); font-weight: bold; }
 
 .selectionIndicator {
-    width: 24px;
-    height: 24px;
-    display: flex;
-    align-items: center;
-    justify-content: center;
-    border: 2px solid var(--color-primary);
-    border-radius: 50%;
-    font-size: 1.2rem;
-    transition: all var(--transition-fast);
+    width: 24px; height: 24px; display: flex; align-items: center; justify-content: center;
+    border: 2px solid var(--color-primary); border-radius: 50%; font-size: 1.2rem; transition: all 0.3s;
 }
 
 .optionButton.selected .selectionIndicator {
@@ -659,46 +381,19 @@
 .loading {
     color: var(--color-text);
     text-align: center;
-    padding: var(--spacing-lg);
-    font-family: var(--font-family);
-    font-size: var(--font-size-large);
+    padding: var(--spacing-lg, 1.5rem);
+    font-size: 1.25rem;
     text-transform: uppercase;
     letter-spacing: 2px;
 }
 
-.userGuide {
-    margin: 1rem 0;
-    padding: 0.5rem;
-    background-color: rgba(255, 255, 255, 0.1);
-    border-radius: 8px;
-}
-
-.guideText {
-    margin: 0.5rem 0;
-    font-size: 0.9rem;
-    color: #666;
-}
-
-.optionTags span {
-    cursor: help;
-}
-
-/* Add tooltip styles */
-[title] {
-    position: relative;
-}
+.userGuide { margin: 1rem 0; padding: 0.5rem; background-color: rgba(255, 255, 255, 0.08); border-radius: 8px; }
+.guideText { margin: 0.5rem 0; font-size: 0.9rem; color: #ccc; }
 
+[title] { position: relative; }
 [title]:hover::after {
     content: attr(title);
-    position: absolute;
-    bottom: 100%;
-    left: 50%;
-    transform: translateX(-50%);
-    padding: 0.5rem;
-    background-color: #333;
-    color: white;
-    border-radius: 4px;
-    font-size: 0.8rem;
-    white-space: nowrap;
-    z-index: 1000;
+    position: absolute; bottom: 100%; left: 50%; transform: translateX(-50%);
+    padding: 0.5rem; background-color: #333; color: white; border-radius: 4px;
+    font-size: 0.8rem; white-space: nowrap; z-index: 1000;
 }
\ No newline at end of file
diff --git a/styles/globals.css b/styles/globals.css
index 95f3fdb..c6a9d53 100644
--- a/styles/globals.css
+++ b/styles/globals.css
@@ -1,45 +1,114 @@
 @import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');
 
 :root {
-  /* Base Colors */
-  --color-primary: #f7b500;
-  --color-primary-dark: #c49000;
-  --color-secondary: #fff3d6;
-  --color-background: #fffbe9;
-  --color-text: #2d1600;
-  --color-accent: #e85d04;
+  /* Base - Dark theme as default */
+  --base-color-rgb: 24, 28, 39; /* #181c27 */
+  --base-color-inverse-rgb: 255, 255, 255;
+  --base-color: rgb(var(--base-color-rgb));
+  --base-color-inverse: rgb(var(--base-color-inverse-rgb));
+
+  /* Semantic Colors */
+  --color-background: rgb(var(--base-color-rgb));
+  --color-background-light: rgba(var(--base-color-inverse-rgb), 0.06);
+  --color-text: var(--base-color-inverse);
+  --color-text-dark: #0b0f1a;
+
+  --color-primary: #00eaff;        /* Neon Blue */
+  --color-primary-dark: #00b8cc;
+  --color-secondary: #fbbf24;      /* Neon Yellow */
+  --color-accent: #ff5af7;         /* Neon Pink */
 
-  /* Theme-specific Colors */
+  /* Brand / Utilities */
   --neon-blue: #00eaff;
   --neon-pink: #ff5af7;
   --neon-yellow: #fbbf24;
-  /* --card-bg: rgba(30,34,54,0.93); */
-  --glass-bg: rgba(255, 255, 255, 0.10);
-  --white: #fff;
+
+  --white: #ffffff;
   --dark: #181c27;
+  --color-white: #ffffff;          /* alias used in some components */
+  --color-gray-400: #9ca3af;       /* alias used in diff styles */
+  --color-gray-900: #111827;       /* alias used in diff styles */
+
+  /* Surfaces & Effects */
+  --card-bg: rgba(30, 34, 54, 0.93);
+  --glass-bg: rgba(255, 255, 255, 0.10);
+  --input-bg: rgba(255, 255, 255, 0.08);
+
   --shadow-blue: #00eaff44;
   --shadow-pink: #ff5af744;
   --shadow-yellow: #fbbf2444;
-  --input-bg: #222a;
+  --shadow-accent: var(--shadow-blue);
+  --shadow-gold: #fbbf2440;
+
+  /* Navigation */
   --nav-bg: linear-gradient(90deg, #181c27 0%, #232946 100%);
   --nav-active: var(--neon-blue);
   --nav-inactive: #232946;
   --nav-shadow: 0 2px 16px var(--shadow-blue);
   --nav-radius: 1.1rem;
+
+  /* Buttons */
   --button-radius: 0.9rem;
   --button-bg: linear-gradient(90deg, var(--neon-blue) 0%, var(--neon-pink) 100%);
   --button-bg-alt: linear-gradient(90deg, var(--neon-pink) 0%, var(--neon-blue) 100%);
   --button-shadow: 0 4px 24px var(--shadow-blue), 0 2px 10px var(--shadow-pink);
   --button-dark-filter: brightness(0.75) contrast(1.2) saturate(1.4);
+
+  /* Accent Aliases (used by CSS Modules) */
+  --accent-main: var(--neon-blue);
+  --accent-dark: var(--dark);
+  --accent-light: rgba(0, 234, 255, 0.16);
+  --accent-gold: var(--neon-yellow);
 }
 
-[data-theme="light"] {
+[data-theme="dark"] {
+  /* Explicit mapping for clarity (same as :root) */
+  --base-color-rgb: 24, 28, 39;
+  --base-color-inverse-rgb: 255, 255, 255;
+  --color-background: rgb(var(--base-color-rgb));
+  --color-background-light: rgba(var(--base-color-inverse-rgb), 0.06);
+  --color-text: var(--base-color-inverse);
+  --color-text-dark: #0b0f1a;
+
   --color-primary: #00eaff;
   --color-primary-dark: #00b8cc;
-  --color-secondary: #ff5af7;
-  --color-background: #181c27;
-  --color-text: #ffffff;
-  --color-accent: #fbbf24;
+  --color-secondary: #fbbf24;
+  --color-accent: #ff5af7;
+
+  --card-bg: rgba(30, 34, 54, 0.93);
+  --glass-bg: rgba(255, 255, 255, 0.10);
+  --input-bg: rgba(255, 255, 255, 0.08);
+
+  --accent-main: var(--neon-blue);
+  --accent-dark: var(--dark);
+  --accent-light: rgba(0, 234, 255, 0.16);
+  --accent-gold: var(--neon-yellow);
+}
+
+[data-theme="light"] {
+  /* Light (Ramen) Theme */
+  --base-color-rgb: 255, 251, 233; /* #fffbe9 */
+  --base-color-inverse-rgb: 45, 22, 0; /* #2d1600 */
+  --base-color: rgb(var(--base-color-rgb));
+  --base-color-inverse: rgb(var(--base-color-inverse-rgb));
+
+  --color-primary: #f7b500;
+  --color-primary-dark: #c49000;
+  --color-secondary: #fff3d6;
+  --color-background: #fffbe9;
+  --color-background-light: rgba(var(--base-color-inverse-rgb), 0.06);
+  --color-text: #2d1600;
+  --color-text-dark: #2d1600;
+  --color-accent: #e85d04;
+
+  --card-bg: rgba(255, 255, 255, 0.9);
+  --glass-bg: rgba(0, 0, 0, 0.06);
+  --input-bg: rgba(0, 0, 0, 0.08);
+
+  --accent-main: var(--color-primary);
+  --accent-dark: #2d1600;
+  --accent-light: rgba(247, 181, 0, 0.16);
+  --accent-gold: #fbbf24;
 }
 
 body {

