/* Removed :root block due to CSS Modules restriction. All variables are now in globals.css. */

.builderContainer {
  min-height: 100vh;
  background: var(--color-background);
  color: var(--color-text-primary);
  padding: var(--space-4);
  position: relative;
}

.title {
  text-align: center;
  margin-bottom: var(--space-8);
  padding: var(--space-4) var(--space-6);
  background: var(--glass-bg);
  backdrop-filter: var(--glass-backdrop);
  border: 1px solid var(--glass-border);
  border-radius: var(--squircle-lg);
  color: var(--color-text-primary);
}

.title h1 {
  font-size: clamp(1.5rem, 4vw, 2.5rem);
  background: linear-gradient(135deg, var(--color-ramen-orange), var(--color-ramen-gold));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

body.dark .title h1 {
  background: linear-gradient(135deg, var(--color-cyber-blue), var(--color-cyber-purple));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.contentContainer {
  display: grid;
  grid-template-columns: 1fr 300px;
  gap: var(--space-8);
  max-width: 1400px;
  margin: 0 auto;
}

.builderContent {
  background: var(--glass-bg);
  backdrop-filter: var(--glass-backdrop);
  border: 1px solid var(--glass-border);
  border-radius: var(--squircle-lg);
  padding: var(--space-6);
}

.stepsContainer {
  margin-bottom: var(--space-6);
}

.stepContent {
  margin-bottom: var(--space-6);
}

.filterControls {
  display: flex;
  gap: var(--space-4);
  margin-bottom: var(--space-6);
  border: none;
  padding: 0;
}

.filterControls legend {
  font-weight: 600;
  margin-bottom: var(--space-2);
  color: var(--color-text-primary);
}

.filterToggle {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  cursor: pointer;
  padding: var(--space-2) var(--space-4);
  background: rgba(255, 255, 255, 0.05);
  border-radius: var(--squircle-md);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all var(--transition-base);
  color: var(--color-text-secondary);
}

.filterToggle:hover {
  background: rgba(255, 133, 0, 0.1);
  border-color: rgba(255, 133, 0, 0.3);
  color: var(--color-text-primary);
}

.filterToggle input[type="checkbox"] {
  accent-color: var(--color-ramen-orange);
}

body.dark .filterToggle:hover {
  background: rgba(0, 212, 255, 0.1);
  border-color: rgba(0, 212, 255, 0.3);
}

body.dark .filterToggle input[type="checkbox"] {
  accent-color: var(--color-cyber-blue);
}

.stepContainer {
  background: rgba(255, 255, 255, 0.02);
  border-radius: var(--squircle-md);
  padding: var(--space-6);
  min-height: 400px;
}

.stepControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-6);
}

.actions {
  display: flex;
  gap: var(--space-4);
  justify-content: center;
}

.actionButton {
  background: linear-gradient(135deg, var(--color-ramen-orange), var(--color-ramen-gold));
  color: white;
  border: none;
  padding: var(--space-3) var(--space-6);
  border-radius: var(--squircle-xl);
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-base);
  box-shadow: 0 4px 16px rgba(255, 133, 0, 0.3);
}

.actionButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 32px rgba(255, 133, 0, 0.4);
}

.actionButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

body.dark .actionButton {
  background: linear-gradient(135deg, var(--color-cyber-blue), var(--color-cyber-purple));
  box-shadow: 0 4px 16px rgba(0, 212, 255, 0.3);
}

body.dark .actionButton:hover:not(:disabled) {
  box-shadow: 0 8px 32px rgba(0, 212, 255, 0.4);
}

.cartContainer {
  background: var(--glass-bg);
  backdrop-filter: var(--glass-backdrop);
  border: 1px solid var(--glass-border);
  border-radius: var(--squircle-lg);
  padding: var(--space-4);
  height: fit-content;
  position: sticky;
  top: var(--space-4);
}

/* Options Grid */
.optionsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--space-4);
}

.optionBtn {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--squircle-md);
  padding: var(--space-4);
  cursor: pointer;
  transition: all var(--transition-base);
  color: var(--color-text-primary);
  text-align: left;
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.optionBtn:hover {
  border-color: rgba(255, 133, 0, 0.3);
  background: rgba(255, 133, 0, 0.1);
  transform: translateY(-2px);
}

.optionBtn.selected {
  border-color: var(--color-ramen-orange);
  background: rgba(255, 133, 0, 0.2);
  box-shadow: 0 0 20px rgba(255, 133, 0, 0.3);
}

body.dark .optionBtn:hover {
  border-color: rgba(0, 212, 255, 0.3);
  background: rgba(0, 212, 255, 0.1);
}

body.dark .optionBtn.selected {
  border-color: var(--color-cyber-blue);
  background: rgba(0, 212, 255, 0.2);
  box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
}

.optionBtn input[type='checkbox'],
.optionBtn input[type='radio'] {
  margin-right: var(--space-2);
  accent-color: var(--color-ramen-orange);
}

body.dark .optionBtn input[type='checkbox'],
body.dark .optionBtn input[type='radio'] {
  accent-color: var(--color-cyber-blue);
}

.iconWrap {
  font-size: 2rem;
  flex-shrink: 0;
}

.optionTextWrap {
  flex: 1;
}

.optionTextWrap h3 {
  margin-bottom: var(--space-1);
  color: var(--color-text-primary);
  font-size: 1rem;
  font-weight: 600;
}

.optionDetails {
  font-size: 0.875rem;
  color: var(--color-text-secondary);
}

/* Responsive Design */
@media (max-width: 1024px) {
  .contentContainer {
    grid-template-columns: 1fr;
    gap: var(--space-6);
  }

  .cartContainer {
    position: static;
  }
}

@media (max-width: 768px) {
  .builderContainer {
    padding: var(--space-2);
  }

  .builderContent {
    padding: var(--space-4);
  }

  .optionsGrid {
    grid-template-columns: 1fr;
  }

  .actions {
    flex-direction: column;
  }

  .filterControls {
    flex-direction: column;
    gap: var(--space-2);
  }
}